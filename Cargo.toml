[package]
name = "webb-relayer"
version = "0.4.1"
authors = ["Shady Khalifa <shekohex@gmail.com>"]
edition = "2021"
description = "The Webb Relayer toolkit"
license = "Apache-2.0"
documentation = "https://docs.rs/webb-relayer"
homepage = "https://webb.tools"
repository = "https://github.com/webb-tools/relayer"
exclude = ["tests", "config", ".github", "ci", "assets", "docker"]

[lib]
doctest = false

[[bin]]
name = "webb-relayer"
path = "src/main.rs"
required-features = ["cli"]

[[example]]
name = "in-depth"
path = "examples/in_depth.rs"
required-features = ["cli"]

[dependencies]
anyhow = { version = "^1", optional = true }
parking_lot = "^0.12"
once_cell = "^1.8"
thiserror = "^1"
async-trait = "^0.1"
tracing = { version = "^0.1", features = ["log"] }
tracing-futures = "^0.2"
tracing-subscriber = { version = "0.3.1", features = ["parking_lot", "env-filter"], optional = true }
tracing-test = "0.2"
url = { version = "^2.2", features = ["serde"] }
sled = { version = "^0.34" }
futures = { version = "^0.3", default-features = false }
backoff = { version = "0.4.0", features = ["tokio"] }
serde = { version = "^1", default-features = false, features = ["derive"] }
tokio = { version = "^1", features = ["full"] }
tokio-stream = { version = "^0.1" }
warp = { version = "0.3.1", default-features = false, features = ["websocket", "tls"] }
warp-real-ip = "0.2"
config = { version = "0.11", default-features = false, features = ["toml", "json"] }
serde_json = { version = "^1", default-features = false }
structopt = { version = "^0.3", features = ["paw"], optional = true }
paw = { version = "^1.0", optional = true }
directories-next = { version = "^2.0", optional = true }
rand = { version = "0.8", default-features = false, features = ["getrandom"] }
hex = { version = "0.4", default-features = false }
# just to make it compile on linux where the openssl is not available.
# until ethers-rs solve this issue: https://github.com/gakonst/ethers-rs/issues/325
native-tls = { version = "^0.2", features = ["vendored"] }
# Used by ethers (but we need it to be vendored with the lib).
openssl = { version = "0.10", features = ["vendored"], optional = true }
webb = { version = "0.5.5", default-features = false }
webb-proposals = { version = "0.5.4", default-features = false, features = ["scale"] }
ethereum-types = "0.13"
glob = "^0.3"
headers = "0.3.5"
dotenv = "0.15.0"
serde_path_to_error = "0.1.5"
tempfile = "^3.2"
derive_more = { version = "0.99", default-features = false, features = ["display"] }
typed-builder = "0.10.0"
libsecp256k1 = "0.7.0"
tiny-bip39 = "1.0.0"
tiny-keccak = { version = "2.0.2", features = ["sha3"] }
cosmrs = { version = "0.9.0", features = ["bip32", "rpc", "cosmwasm", "dev"], optional = true }


[dev-dependencies]
tempfile = "^3.2"
colored = "2"

[features]
default = ["evm-runtime", "substrate-runtime"]
cli = ["evm-runtime", "substrate-runtime", "anyhow", "tracing-subscriber", "structopt", "paw", "directories-next"]
evm-runtime = ["webb/evm-runtime", "webb-proposals/evm"]
substrate-runtime = ["webb/substrate-runtime", "webb-proposals/substrate"]
integration-tests = ["tracing-subscriber/json"]
cosmwasm = ["cosmrs"]

name: CI

on: [push, pull_request]

jobs:
  # This job downloads and stores `cross` as an artifact, so that it can be
  # redownloaded across all of the jobs. Currently this copied pasted between
  # `ci.yml` and `deploy.yml`. Make sure to update both places when making
  # changes.
  install-cross:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 50
      - uses: XAMPPRocky/get-github-release@v1
        id: cross
        with:
          owner: rust-embedded
          repo: cross
          matches: ${{ matrix.platform }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        with:
          name: cross-${{ matrix.platform }}
          path: ${{ steps.cross.outputs.install_path }}
    strategy:
      matrix:
        platform: [linux-musl, apple-darwin]

  macos:
    runs-on: macos-latest
    needs: install-cross
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
            target/x86_64-apple-darwin/debug
            target/x86_64-apple-darwin/release
            target/debug
            target/release
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}
      - uses: actions/download-artifact@v1
        with:
          name: cross-apple-darwin
          path: /usr/local/bin/
      - run: chmod +x /usr/local/bin/cross
      - run: ci/set_rust_version.bash ${{ matrix.channel }} ${{ matrix.target }}
      - run: ci/build.bash cross ${{ matrix.target }}
      - name: Use Node.js
        if: matrix.target == 'x86_64-apple-darwin'
        uses: actions/setup-node@v2
        with:
          node-version-file: "./tests/.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./tests/yarn.lock"
      - run: npm install -g ganache-cli
        if: matrix.target == 'x86_64-apple-darwin'
        # Only test on macOS platforms since we can't simulate the others.
      - run: ci/test.bash cross ${{ matrix.target }}
        if: matrix.target == 'x86_64-apple-darwin'
      - run: cargo build --features integration-tests
        if: matrix.target == 'x86_64-apple-darwin'
        shell: bash
      - name: Install NPM Packages.
        if: matrix.target == 'x86_64-apple-darwin'
        run: cd tests && git submodule update --init --recursive && yarn
      - name: Create test env file
        run: echo "RINKEBY_PRIVATE_KEY=0x8c21e6dc9d5e89a6bfeae445466a45d520f5c288984b0786cd7f0a18a9155ff1" > tests/.env
      - name: Webb Relayer Integration tests.
        if: matrix.target == 'x86_64-apple-darwin'
        run: cd tests && yarn test

    strategy:
      fail-fast: true
      matrix:
        channel: [stable]
        target:
          - x86_64-apple-darwin

  linux:
    runs-on: ubuntu-latest
    needs: install-cross
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
            target/x86_64-unknown-linux-musl/debug
            target/x86_64-unknown-linux-musl/release
            target/aarch64-unknown-linux-musl/debug
            target/aarch64-unknown-linux-musl/release
            target/debug
            target/release
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.target }}
      - name: Download Cross
        uses: actions/download-artifact@v1
        with:
          name: cross-linux-musl
          path: /tmp/
      - run: chmod +x /tmp/cross
      - run: ci/set_rust_version.bash ${{ matrix.channel }} ${{ matrix.target }}
      - run: ci/build.bash /tmp/cross ${{ matrix.target }}
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version-file: "./tests/.nvmrc"
          cache: "yarn"
          cache-dependency-path: "./tests/yarn.lock"
      - run: npm install -g ganache-cli
      - run: ci/test.bash /tmp/cross ${{ matrix.target }}
        if: matrix.target == 'x86_64-unknown-linux-gnu'
      - run: cargo build --features integration-tests
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        shell: bash
      - name: Install NPM Packages.
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: cd tests && git submodule update --init --recursive && yarn
      - name: Webb Relayer Integration tests.
        if: matrix.target == 'x86_64-unknown-linux-gnu'
        run: cd tests && yarn test

    strategy:
      fail-fast: true
      matrix:
        channel: [stable]
        target:
          - aarch64-unknown-linux-musl
          - x86_64-unknown-linux-musl

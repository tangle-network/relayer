on:
  push:
    branches:
      # TODO: if its on main branch and not a tag, cancel workflow
      - main
      - develop
      # TODO: only for testing
      - felix/automatic-release

name: Webb Relayer Release
env:
  BIN: webb-relayer
  DEV_PACKAGES: build-essential musl musl-dev musl-tools libssl-dev pkg-config

jobs:
  # This job downloads and stores `cross` as an artifact, so that it can be
  # redownloaded across all of the jobs. Currently this copied pasted between
  # `image-publish.yml` and `release.yml`. Make sure to update both places
  # when making changes.
  install-cross:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 50
      - uses: XAMPPRocky/get-github-release@v1
        id: cross
        with:
          owner: rust-embedded
          repo: cross
          matches: ${{ matrix.platform }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        with:
          name: cross-${{ matrix.platform }}
          path: ${{ steps.cross.outputs.install_path }}
    strategy:
      matrix:
        platform: [linux-musl, apple-darwin]

  macos:
    runs-on: macos-latest
    needs: install-cross
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: cross-apple-darwin
          path: /usr/local/bin/
      - run: chmod +x /usr/local/bin/cross

      - run: ci/set_rust_version.bash stable ${{ matrix.target }}
      - run: ci/build.bash cross ${{ matrix.target }} RELEASE
      - run: mkdir dist
      - run: tar -czvf dist/${{ env.BIN }}.tar.gz --directory=target/${{ matrix.target }}/release ${{ env.BIN }}
      - name: Upload release artifacts for publishing
        uses: actions/upload-artifact@v3
        with:
          path: dist

  linux:
    runs-on: ubuntu-latest
    needs: install-cross
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          #- armv7-unknown-linux-gnueabihf
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: install system build dependencies
        run: sudo apt-get update && sudo apt-get install ${DEV_PACKAGES}
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: cross-linux-musl
          path: /tmp/
      - run: chmod +x /tmp/cross
      - run: ci/set_rust_version.bash stable ${{ matrix.target }}
      - run: ci/build.bash /tmp/cross ${{ matrix.target }} RELEASE
      - run: mkdir dist
      - run: tar -czvf dist/${{ env.BIN }}.tar.gz --directory=target/${{ matrix.target }}/release ${{ env.BIN }}
      - name: Upload release artifacts for publishing
        uses: actions/upload-artifact@v3
        with:
          path: |
            ${{ env.BIN }}.tar.gz
            ${{ env.BIN }}-${{ matrix.target }}.tar.gz

  publish:
    name: publish
    runs-on: ubuntu-latest
    #needs: ["macos", "linux"]
    env:
      # TODO: change to develop branch
      release_name: ${{ (github.branch == 'felix/automatic-release') && 'develop' || github.ref}}
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Download artifacts from builders
        uses: actions/download-artifact@v3
        with:
          path: dist
      - uses: actions/checkout@v2
      #- run: ls -al ./dist/**
      - run: ls -al .github
      - run: echo ${{ github.ref_name }}
      - name: Publish Release
        uses: ./.github/actions/github-release
        with:
          files: "dist/*"
          name: $${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}
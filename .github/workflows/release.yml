on:
  # separate push conditions so they are combined with 'or', not 'and'
  # TODO: this is not working, might have to run on all pushes and then cancel manually?
  push:
    branches:
      - develop
      # TODO: only for testing
      - felix/automatic-release
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

name: Webb Relayer Release
env:
  BIN: webb-relayer
  DEV_PACKAGES: build-essential musl musl-dev musl-tools libssl-dev pkg-config

jobs:
  # This job downloads and stores `cross` as an artifact, so that it can be
  # redownloaded across all of the jobs. Currently this copied pasted between
  # `ci.yml` and `release.yml`. Make sure to update both places when making
  # changes.
  install-cross:
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v1
        with:
          fetch-depth: 50
      - uses: XAMPPRocky/get-github-release@v1
        id: cross
        with:
          owner: rust-embedded
          repo: cross
          matches: ${{ matrix.platform }}
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        with:
          name: cross-${{ matrix.platform }}
          path: ${{ steps.cross.outputs.install_path }}
    strategy:
      matrix:
        platform: [linux-musl, apple-darwin]

  macos:
    runs-on: macos-latest
    needs: install-cross
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust"
          cache-directories: ".dvc/tmp\n.dvc/cache"
      - uses: actions/download-artifact@v1
        with:
          name: cross-apple-darwin
          path: /usr/local/bin/
      - run: chmod +x /usr/local/bin/cross

      - run: ci/set_rust_version.bash stable ${{ matrix.target }}
      - run: ci/build.bash cross ${{ matrix.target }} RELEASE
      - run: tar -czvf ${{ env.BIN }}.tar.gz --directory=target/${{ matrix.target }}/release ${{ env.BIN }}
      - name: Upload release artifacts for publishing
        uses: actions/upload-artifact@v3
        with:
          name: dist-without-markdown
          path: |
            ${{ env.BIN }}.tar.gz
            ${{ env.BIN }}-${{ matrix.target }}.tar.gz

  linux:
    runs-on: ubuntu-latest
    needs: install-cross
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-
          - armv7-unknown-linux-gnueabihf
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}
      - name: install system build dependencies
        run: sudo apt-get update && sudo apt-get install ${DEV_PACKAGES}
      - uses: actions/checkout@v2
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: "rust"
          cache-directories: ".dvc/tmp\n.dvc/cache"
      - uses: actions/download-artifact@v1
        with:
          name: cross-linux-musl
          path: /tmp/
      - run: chmod +x /tmp/cross

      - run: ci/set_rust_version.bash stable ${{ matrix.target }}
      - run: ci/build.bash /tmp/cross ${{ matrix.target }} RELEASE
      - run: tar -czvf ${{ env.BIN }}.tar.gz --directory=target/${{ matrix.target }}/release ${{ env.BIN }}
      - name: Upload release artifacts for publishing
        uses: actions/upload-artifact@v3
        with:
          name: dist-without-markdown
          path: |
            ${{ env.BIN }}.tar.gz
            ${{ env.BIN }}-${{ matrix.target }}.tar.gz

  publish:
    name: publish
    runs-on: ubuntu-latest
    needs: ["macos", "linux"]
    steps:
      - name: Install Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Download artifacts from builders
        uses: actions/download-artifact@v1
        with:
          name: dist-aarch64-pc-windows-msvc
          path: |
            webb-relayer-aarch64-apple-darwin.tar.gz
            webb-relayer-aarch64-unknown-linux-gnu.tar.gz
            webb-relayer-x86_64-apple-darwin.tar.gz
            webb-relayer-x86_64-unknown-linux-gnu.tar.gz
            webb-relayer-x86_64-unknown-linux-musl.tar.gz
      - run: ls -al ./dist
      - run: echo ${{github.action}}
      - name: Initialize variable `release_name`
        env: 
          # TODO: change to develop branch
          release_name: ${{ (github.branch == 'felix/automatic-release') && 'nightly' || github.ref}}
      - name: Publish Release
        uses: ./.github/actions/github-release
        with:
          files: "dist/*"
          name: ${{ release_name }}
          token: ${{ secrets.GITHUB_TOKEN }}